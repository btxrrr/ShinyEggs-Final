@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
	<li class="nav-item">
			<a class="nav-item" href="/Cart/GetUserCart">
				<button type="button" class="btn btn-light">
					<i class="bi bi-cart"></i>
					<span id="cartCount" class="badge text-bg-warning">0</span>
				</button>
			</a>
		</li>
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
				Hello <span id="username">@User.Identity?.Name</span>!
				@if (User.Identity.IsAuthenticated &&
			(User.IsInRole("Root Admin") || User.IsInRole("Admin") ||
			User.IsInRole("Inventory Manager") ||
			User.IsInRole("Audit Manager") || User.IsInRole("Role Manager")))

				{
					<span>(Admin)</span>
				}
			</a>
		</li>
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link">Logout</button>
			</form>
		</li>
	}
	else
	{
		

		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
